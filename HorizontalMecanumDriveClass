package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.TouchSensor;
import com.qualcomm.robotcore.hardware.DigitalChannel;
import com.qualcomm.robotcore.hardware.DigitalChannelController;


/**
 * Created by Phoebe Taylor on 10/23/2017.
 * Program is for running a mecanum drive train with a lift, which consists of a motor and 2 180
 * servos for grabbing the blocks. The horizontal lift for the relic will consist of another motor
 * and two more 180 servos.
 * right bumper will open and close the grabbers on the vertical lift
 * 'Y' will raise the vertical lift, and 'X' will lower it
 * 'B' will extend the horizontal lift and 'A' will retract it
 * left bumper will rotate the elbow of the horizontal lift from parallel to perpendicular to the ground
 * The down button on the dpad will alternate between the relic grabber opening and closing
 * TODO: FIX COMMENTS FOR CONTROLS
 * TODO: open right bottom grabber less on the init (still hits the guide piece)
 * TODO: left grabbers should both open just a bit more, adjust limits
 * TODO: Right grabbers both need to close a bit more than they do, adjust limits
 * TODO: Possibly put up the color sense arm up a little less on init as well, closer to teleop open
 *
 */

@TeleOp(name="With horizontal lift", group = "mecanum")
public class HorizontalMecanumDriveClass extends LinearOpMode{

    /*Declare controller variables */
    public double x_axis;
    public double y_axis;
    public double z_axis;
    /*The following variables are used to gradually increment up or down the values of the servos so
    that you no longer have to set a specific position for open/closed. Just hold down the button and
    it will close or open gradually
    0.0 is open left bottom servo grabber
    1.0 is open right bottom servo grabber
    0.0 is open left top servo grabber
    1.0 is open right top servo grabber
     */
    public double elbow_value = 0.5;
    public double left_grab_value = 0.01; //open
    public double right_grab_value = 0.99; //close
    public double left_top_value = 0.01;
    public double right_top_value = 0.99;
    public double min_left_grab_value = 0.32;
    public double min_right_grab_value = 0.68;

    public boolean buttonPressed = true;



    //make object of the hardware class so we can use its elements
    MecanumHardware robot = new MecanumHardware();



    @Override
    public void runOpMode () {
        robot.init(hardwareMap);

        robot.bottom_sensor.setMode(DigitalChannel.Mode.INPUT);

        waitForStart();
        while (opModeIsActive()) {
            /** following code is for the drive train */
            //buffer for y axis of steering
            if (gamepad1.left_stick_y < -0.01 || gamepad1.left_stick_y > 0.01) {
                y_axis = -gamepad1.left_stick_y;
            } else {
                y_axis = 0;
            }
            //buffer for x axis of steering
            if (gamepad1.left_stick_x < -0.01 || gamepad1.left_stick_x > 0.01) {
                x_axis = gamepad1.left_stick_x;
            } else {
                x_axis = 0;
            }
            //buffer for z axis (turning)
            if (gamepad1.right_stick_x < -0.01 || gamepad1.right_stick_x > 0.01) {
                z_axis = gamepad1.right_stick_x;
            } else {
                z_axis = 0;
            }

            //logic for setting power to correct motors
            robot.frontRight.setPower(x_axis - y_axis + z_axis);
            robot.frontLeft.setPower(x_axis + y_axis + z_axis);
            robot.backRight.setPower(-x_axis - y_axis + z_axis);
            robot.backLeft.setPower(-x_axis + y_axis + z_axis);

            /**end code for drive train, below is the code for the vertical lift */
            /*code for grabber, right bumper for open, right bumper for open/drop
            * the first while loop will increment the grabber closed (left dpad). The second while
            * loop will increment the grabber open (right dpad) */
            //close, min value left can close is 0.32, min value right can close is 0.68
            while (gamepad1.dpad_left && left_grab_value < 0.45 && right_grab_value > 0.55) {
                //bottom pair of grabbers
                robot.left_grab.setPosition(left_grab_value);
                robot.right_grab.setPosition(right_grab_value);
                //top pair of grabbers
                robot.top_left.setPosition(left_grab_value);
                robot.top_right.setPosition(right_grab_value);
                //increment up
                left_grab_value += 0.004;
//                left_top_value += 0.004;
                right_grab_value -= 0.004;
//                right_top_value -= 0.004;
            }
            //open
            while (gamepad1.dpad_right && left_grab_value > 0.1 && right_grab_value < 0.9) {
                //bottom pair of grabbers
                robot.left_grab.setPosition(left_grab_value);
                robot.right_grab.setPosition(right_grab_value);
                //top pair of grabbers
                robot.top_left.setPosition(left_grab_value);
                robot.top_right.setPosition(right_grab_value);
                left_grab_value -= 0.004;
                right_grab_value += 0.004;
            }

            //code for the lift motor. Y button will go up, X will go down, and if the limit switch
            //and the X button are pressed simultaneously, the motor will not move
            buttonPressed = robot.bottom_sensor.getState();
            telemetry.addData("touch sensor is:", buttonPressed);
            telemetry.update();

            if (gamepad1.y) {
                robot.lift.setPower(-0.32);

            }
            else if (gamepad1.x) {
                if (robot.bottom_sensor.getState() == false) {
                    robot.lift.setPower(0);
                }
                else if (robot.bottom_sensor.getState() == true) {
                    robot.lift.setPower(0.3);
                }
            }
            else {
                robot.lift.setPower(0);
            }

            /**end code for vertical lift, below is code for the horizontal lift */
            //while the 'b' button is pressed, arm will extend, while 'a' is pressed it will come back in
            if (gamepad1.b) {
                robot.horizontal_lift.setPower(-0.3);
                robot.back_lift.setPower(-0.3);
            }
            else if (gamepad1.a) {
                robot.horizontal_lift.setPower(0.3);
                robot.back_lift.setPower(0.3);
            }
            else {
                robot.horizontal_lift.setPower(0);
                robot.back_lift.setPower(0);
            }
            //left trigger opens the claw, right trigger closes
            while (gamepad1.left_trigger > 0.1 && gamepad1.right_trigger < 0.1) {
                robot.claw.setPosition(0.13);
            }
            //close
            while (gamepad1.right_trigger > 0.1 && gamepad1.left_trigger < 0.1) {
                robot.claw.setPosition(0.62);
            }

            //the down button on the dpad will open the horizontal grabber, the up will close it
            while (gamepad1.dpad_down && elbow_value < 0.99) {
                robot.elbow_joint.setPosition(elbow_value);
                elbow_value += 0.001;
            }
            while (gamepad1.dpad_up && elbow_value > 0.01) {
                robot.elbow_joint.setPosition(elbow_value);
                elbow_value -= 0.001;
            }

            robot.jewel_arm.setPosition(0.94);
            telemetry.update();
        }

    }

}
